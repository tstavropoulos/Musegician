<Window x:Class="Musegician.TinyPlayer.TinyPlayer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Musegician.TinyPlayer"
        xmlns:player="clr-namespace:Musegician.Player"
        xmlns:playlist="clr-namespace:Musegician.Playlist"
        xmlns:equalizer="clr-namespace:Musegician.Equalizer"
        mc:Ignorable="d"
        Title="{Binding Source={x:Static player:MusicManager.Instance}, Path=WindowTitle}"
        Height="420" Width="320"
        Deactivated="Window_Deactivated"
        Style="{StaticResource CustomTinyWindowStyle}"
        Icon="/Musegician;component/Resources/logoHat.png"
        Closing="TinyPlayer_Closing">
  <Window.Resources>
    <Style x:Key="UIFontStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
      <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
      <Setter Property="TextAlignment" Value="Center"/>
      <Setter Property="FontSize" Value="22"/>
    </Style>
    <Style x:Key="UISmallerFontStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource UIFontStyle}">
      <Setter Property="FontSize" Value="16"/>
    </Style>
    <DataTemplate x:Key="UIFontButton" DataType="{x:Type sys:String}">
      <TextBlock Text="{Binding}" Style="{StaticResource UIFontStyle}"/>
    </DataTemplate>
    <DataTemplate x:Key="UISmallerFontButton" DataType="{x:Type sys:String}">
      <TextBlock Text="{Binding}" Style="{StaticResource UISmallerFontStyle}"/>
    </DataTemplate>

  </Window.Resources>
  <Window.Triggers>
    <EventTrigger RoutedEvent="Mouse.MouseEnter">
      <BeginStoryboard>
        <Storyboard>
          <DoubleAnimationUsingKeyFrames 
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" 
            Storyboard.TargetName="UpperControls">
            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </BeginStoryboard>
    </EventTrigger>
    <EventTrigger RoutedEvent="Mouse.MouseLeave">
      <BeginStoryboard>
        <Storyboard>
          <DoubleAnimationUsingKeyFrames 
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" 
            Storyboard.TargetName="UpperControls">
            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="-50"/>
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </BeginStoryboard>
    </EventTrigger>
  </Window.Triggers>
  
  
  <Grid Margin="0">
    <DockPanel Margin="0">
      <player:PlaybackPanel x:Name="playbackPanel" DockPanel.Dock="Bottom"/>
      <Image x:Name="albumArt"/>
    </DockPanel>
    <DockPanel Margin="0" ClipToBounds="True">
      <DockPanel x:Name="UpperControls" DockPanel.Dock="Top" Background="{StaticResource DarkInsetPanel}">
        <DockPanel.RenderTransform>
          <TranslateTransform Y="-50"/>
        </DockPanel.RenderTransform>
        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="1,2,0,2">
          <ToggleButton x:Name="OptionToggleButton" ToolTip="Playlist Options" Margin="1,2,0,2"
                      Height="34" Width="34" Content = "⌸" ContentTemplate="{StaticResource UIFontButton}"/>
          <StackPanel Orientation="Horizontal" Margin="4,0,4,0">
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
          </StackPanel>
          <Button ToolTip="Restore Window" Margin="0,0,4,0" Height="33" Width="33"
                Click="Toolbar_RestoreWindow"
                Content="🗔" ContentTemplate="{StaticResource UIFontButton}"/>
          <ToggleButton x:Name="showEqualizer" ToolTip="Show Equalizer" Margin="0,0,4,0" Height="33" Width="33"
                      Content="⫯⫯⫰⫯" ContentTemplate="{StaticResource UISmallerFontButton}"/>
          <Popup x:Name="EqPopUp" IsOpen="{Binding ElementName=showEqualizer, Path=IsChecked}" StaysOpen="False"
               Placement="Bottom" PlacementTarget="{Binding ElementName=showEqualizer}">
            <Border BorderThickness="2" BorderBrush="Black" Background="{StaticResource DarkInsetPanel}" Height="200">
              <equalizer:EqualizerControl/>
            </Border>
          </Popup>
        </StackPanel>
        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="0,2,5,2" 
                  HorizontalAlignment="Right">
          <TextBlock Text="🔊" VerticalAlignment="Center" Foreground="White"
                   Style="{StaticResource UIFontStyle}"/>
          <Slider Orientation="Horizontal" VerticalAlignment="Center" Width="100"
                Minimum="0.0" Maximum="1.0"
                LargeChange="0.1" SmallChange="0.02"
                Value="{Binding Source={x:Static player:MusicManager.Instance}, Path=Volume, Mode=TwoWay}"/>
        </StackPanel>
      </DockPanel>
      <Grid/>
    </DockPanel>
    <Popup x:Name="PlaylistOptionsPopup" StaysOpen="False"
               IsOpen="{Binding ElementName=OptionToggleButton, Path=IsChecked}"
               Placement="Bottom" PlacementTarget="{Binding ElementName=OptionToggleButton}" >
      <!--Mouse.MouseDown="PlaylistOptionsPopup_MouseDown">-->
      <Border BorderThickness="2" BorderBrush="Black" MinHeight="100" MaxHeight="500" MinWidth="200"
                  Background="{StaticResource DarkInsetPanel}">
        <DockPanel>
          <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <ToggleButton ToolTip="Shuffle Toggle" Margin="1,2,4,2" Height="34" Width="34"
                    IsChecked="{Binding Source={x:Static playlist:PlaylistManager.Instance}, Path=Shuffle, Mode=TwoWay}"
                    ContentTemplate="{StaticResource UIFontButton}">
              <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                  <Setter Property="Content" Value="⇉"/>
                  <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                      <Setter Property="Content" Value="🔀"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </ToggleButton.Style>
            </ToggleButton>
            <ToggleButton ToolTip="Repeat Toggle" Margin="0,2,1,2" Height="34" Width="34"
                      IsChecked="{Binding Source={x:Static playlist:PlaylistManager.Instance}, Path=Repeat, Mode=TwoWay}"
                      Content="🔁" ContentTemplate="{StaticResource UIFontButton}"/>
            <StackPanel Orientation="Horizontal" Margin="4,0,4,0">
              <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
            </StackPanel>
            <ToggleButton x:Name="LoadPlaylistButton" ToolTip="Load Playlist"
                      Margin="0" Height="33" Width="33"
                      Content="📂" ContentTemplate="{StaticResource UIFontButton}"/>
            <Popup x:Name="LoadPlaylistPopup" StaysOpen="False"
                       IsOpen="{Binding Path=IsChecked, ElementName=LoadPlaylistButton}"
                       Placement="Bottom" PlacementTarget="{Binding ElementName=LoadPlaylistButton}">
              <Border BorderThickness="2" BorderBrush="Black" Background="{StaticResource DarkInsetPanel}" Height="200">
                <playlist:PlaylistManagementControl x:Name="PlaylistManControl" SaveMode="False"/>
              </Border>
            </Popup>
          </StackPanel>
          <playlist:TightPlaylistControl x:Name="TightPlaylist"/>
        </DockPanel>
      </Border>
    </Popup>
  </Grid>
</Window>
