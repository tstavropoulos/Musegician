<UserControl x:Class="MusicPlayer.Playlist.PlaylistControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:playlist="clr-namespace:MusicPlayer.Playlist"
             xmlns:equalizer="clr-namespace:MusicPlayer.Equalizer"
             xmlns:core="clr-namespace:MusicPlayer.Core"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="500"
             d:DataContext="{d:DesignInstance Type=playlist:MockPlaylistViewModel, IsDesignTimeCreatable=True}">
  <UserControl.Resources>
    <ContextMenu x:Key="PlaylistSongCM">
      <MenuItem Header="Play Song" Click="Play"/>
      <MenuItem Header="Edit Song Information" Click="Edit"/>
      <MenuItem Header="Find In Library" Click="Find"/>
      <Separator/>
      <MenuItem Header="Remove Song" Click="Remove"/>
    </ContextMenu>

    <ContextMenu x:Key="PlaylistRecordingCM">
      <MenuItem Header="Play Recording" Click="Play"/>
      <MenuItem Header="Edit Recording Information" Click="Edit"/>
      <MenuItem Header="Find In Library" Click="Find"/>
      <Separator/>
      <MenuItem Header="Remove Recording" Click="Remove"/>
    </ContextMenu>

    <HierarchicalDataTemplate DataType="{x:Type playlist:PlaylistSongViewModel}"
                              ItemsSource="{Binding Children}">
      <StackPanel Orientation="Horizontal" Background="Transparent"
                  ContextMenu="{StaticResource PlaylistSongCM}">
        <core:WeightBar Margin="0,0,5,0"/>
        <TextBlock Text="{Binding Title}" FontSize="14" VerticalAlignment="Center"/>
      </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type playlist:PlaylistRecordingViewModel}">
      <StackPanel Orientation="Horizontal" Background="Transparent"
                  ContextMenu="{StaticResource PlaylistRecordingCM}">
        <core:WeightBar Margin="0,0,5,0"/>
        <TextBlock Text="{Binding Title}" FontSize="14" VerticalAlignment="Center"/>
        <TextBlock Text="{Binding LiveString}" Margin="5,0,0,0"
                   FontSize="14" FontFamily="Segoe UI Symbol" VerticalAlignment="Center"/>
      </StackPanel>
    </HierarchicalDataTemplate>

    <Style x:Key="UIFontButtonStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
      <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
      <Setter Property="TextAlignment" Value="Center"/>
      <Setter Property="FontSize" Value="22"/>
    </Style>
    <Style x:Key="UISmallerFontButtonStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource UIFontButtonStyle}">
      <Setter Property="FontSize" Value="16"/>
    </Style>

    <DataTemplate x:Key="UIFontButton" DataType="{x:Type sys:String}">
      <TextBlock Text="{Binding}" Style="{StaticResource UIFontButtonStyle}"/>
    </DataTemplate>
    <DataTemplate x:Key="UISmallerFontButton" DataType="{x:Type sys:String}">
      <TextBlock Text="{Binding}" Style="{StaticResource UISmallerFontButtonStyle}"/>
    </DataTemplate>
  </UserControl.Resources>
  <DockPanel>
    <DockPanel DockPanel.Dock="Top" Margin="0,2,0,2" Background="{StaticResource DarkInsetPanel}">
      <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
        <ToggleButton ToolTip="Shuffle" Margin="1,2,4,2" Height="34" Width="34"
                      IsChecked="{Binding Source={x:Static playlist:PlaylistManager.Instance}, Path=Shuffle, Mode=TwoWay}"
                      ContentTemplate="{StaticResource UIFontButton}">
          <ToggleButton.Style>
            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
              <Setter Property="Content" Value="⇉"/>
              <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                  <Setter Property="Content" Value="🔀"/>
                </Trigger>
              </Style.Triggers>
            </Style>
          </ToggleButton.Style>
        </ToggleButton>
        <ToggleButton ToolTip="Repeat" Margin="0,0,0,0" Height="34" Width="34"
                      IsChecked="{Binding Source={x:Static playlist:PlaylistManager.Instance}, Path=Repeat, Mode=TwoWay}"
                      Content="🔁" ContentTemplate="{StaticResource UIFontButton}"/>
        <StackPanel Orientation="Horizontal" Margin="4,0,4,0">
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </StackPanel>
        <Button Name="tinyViewerButton" ToolTip="Open Tiny Viewer" Margin="0,0,4,0" Height="33" Width="33"
                Content="🗗" ContentTemplate="{StaticResource UISmallerFontButton}"/>
        <!--Content="⟎"-->
        <StackPanel Orientation="Horizontal" Margin="4,0,4,0">
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </StackPanel>
        <ToggleButton Name="showEqualizer" ToolTip="Show Equalizer" Margin="0,0,4,0" Height="33" Width="33"
                      Content="⫯⫯⫰⫯" ContentTemplate="{StaticResource UISmallerFontButton}"/>
        <Popup Name="EqPopUp" IsOpen="{Binding ElementName=showEqualizer, Path=IsChecked}" StaysOpen="False"
               Placement="Bottom" PlacementTarget="{Binding ElementName=showEqualizer}">
          <Border BorderThickness="2" BorderBrush="Black" Background="{StaticResource DarkInsetPanel}" Height="200">
            <equalizer:EqualizerControl/>
          </Border>
        </Popup>
        <StackPanel Orientation="Horizontal" Margin="4,0,4,0">
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </StackPanel>
        <Button ToolTip="New Playlist" Margin="0,0,4,0" Height="33" Width="33"
                Content="🗋" ContentTemplate="{StaticResource UIFontButton}"
                Click="Toolbar_NewPlaylist"/>
        <ToggleButton Name="SavePlaylist" ToolTip="Save Playlist" Margin="0,0,4,0" Height="33" Width="33"
                      Click="Toolbar_SavePlaylist"
                      Content="💾" ContentTemplate="{StaticResource UIFontButton}"/>
        <ToggleButton Name="LoadPlaylist" ToolTip="Load Playlist" Margin="0,0,4,0" Height="33" Width="33"
                      Click="Toolbar_LoadPlaylist"
                      Content="📂" ContentTemplate="{StaticResource UIFontButton}"/>
        <Popup Name="LoadPlaylistPopup" StaysOpen="False"
               Placement="Bottom" PlacementTarget="{Binding ElementName=LoadPlaylist}"
               Closed="Popup_PlaylistClosed">
          <Border BorderThickness="2" BorderBrush="Black" Background="{StaticResource DarkInsetPanel}" Height="200">
            <playlist:PlaylistManagementControl x:Name="PlaylistManControl"/>
          </Border>
        </Popup>
      </StackPanel>
      <TextBlock Name="playlistName"
                 Text="{Binding Source={x:Static playlist:PlaylistManager.Instance}, Path=PlaylistName}"
                 FontSize="24" Margin="6" HorizontalAlignment="Center"/>
    </DockPanel>
    <core:MultiSelectTreeView x:Name="PlaylistTree"
                              ItemsSource="{Binding PlaylistViewModels}"
                              KeyDown="Tree_KeyDown">
      <core:MultiSelectTreeView.ItemContainerStyle>
        <Style TargetType="core:MultiSelectTreeViewItem"
               BasedOn="{StaticResource {x:Type core:MultiSelectTreeViewItem}}">
          <EventSetter Event="MouseDoubleClick" Handler="OnItemMouseDoubleClick"/>
          <Setter Property="VerticalContentAlignment" Value="Stretch"/>
          <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
          <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
          <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
          <Setter Property="IsAltState" Value="{Binding Playing}" />
          <Setter Property="FontWeight" Value="Normal" />
          <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <DataTrigger Binding="{Binding IsDim}" Value="True">
              <Setter Property="TextBlock.Foreground" Value="DimGray"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </core:MultiSelectTreeView.ItemContainerStyle>
    </core:MultiSelectTreeView>
  </DockPanel>
</UserControl>
