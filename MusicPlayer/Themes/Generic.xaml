<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MusicPlayer"
                    xmlns:core="clr-namespace:MusicPlayer.Core"
                    xmlns:darkBlendTheme="clr-namespace:DarkBlendTheme">


  <!--#region Colors-->
  <Color x:Key="WindowBackgroundColor">#444444</Color>
  <Color x:Key="DarkBackgroundColor">#333333</Color>
  <Color x:Key="VeryDarkBackgroundColor">#222222</Color>
  <Color x:Key="LightBackgroundColor">#595959</Color>
  <Color x:Key="BackgroundColor">#3D3D3D</Color>
  <Color x:Key="DisabledBackgroundColor">#424242</Color>
  <Color x:Key="LightDisabledBackgroundColor">#666666</Color>

  <Color x:Key="ForegroundColor">#EFEFEF</Color>

  <Color x:Key="HighlightColor">#BDBDBD</Color>
  <Color x:Key="HotColor">#525252</Color>
  <!--#endregion-->


  <!--#region Brushes-->
  <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}"/>
  <SolidColorBrush x:Key="MouseOverForegroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}"/>
  <SolidColorBrush x:Key="DarkInsetPanel" Color="{StaticResource VeryDarkBackgroundColor}"/>

  <SolidColorBrush x:Key="ListBorder" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="ListBackground" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="SelectedListItem" Color="{StaticResource HighlightColor}"/>
  <SolidColorBrush x:Key="AltListItem" Color="DarkBlue"/>
  <SolidColorBrush x:Key="AltSelectedListItem" Color="DarkSlateBlue"/>
  <SolidColorBrush x:Key="SelectedListItemForeground" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="MouseOverListItem" Color="#4A4A4A"/>
  
  <SolidColorBrush x:Key="TreeViewBackground" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="TreeViewDisabledForeground" Color="{StaticResource LightDisabledBackgroundColor}"/>
  
  <!--#endregion-->

  <!--#region MultiSelectTreeView-->
  <Style TargetType="{x:Type core:MultiSelectTreeView}">
    <Setter Property="Background" Value="{StaticResource TreeViewBackground}"/>
    <Setter Property="Padding" Value="1"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type core:MultiSelectTreeView}">
          <Border x:Name="Bd" SnapsToDevicePixels="true">
            <ScrollViewer x:Name="_tv_scrollviewer_" 
                          Background="{TemplateBinding Background}"
                          CanContentScroll="false" Focusable="false" 
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                          Padding="{TemplateBinding Padding}" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource TreeViewDisabledForeground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DrawingBrush x:Key="SelectedBorderBrush"
                Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{StaticResource SelectedListItem}">
          <GeometryDrawing.Geometry>
            <GeometryGroup>
              <RectangleGeometry Rect="0,0,50,50" />
              <RectangleGeometry Rect="50,50,50,50" />
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="UnSelectedBorderBrush"/>


  <Style TargetType="{x:Type core:MultiSelectTreeViewItem}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="MinHeight" Value="21"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Padding" Value="2,4,2,3"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type core:MultiSelectTreeViewItem}">
          <ControlTemplate.Resources>
            <darkBlendTheme:LeftMarginMultiplierConverter Length="15" x:Key="LengthConverter" />
          </ControlTemplate.Resources>
          <StackPanel>
            <Border Name="Bd"
                    Background="Transparent"
                    Padding="{TemplateBinding Padding}"
                    BorderThickness="1,1,1,1"
                    BorderBrush="{StaticResource UnSelectedBorderBrush}">
              <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="15"/>
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="Expander" 
                              Grid.Column="0"
                              Style="{DynamicResource TreeViewToggleButtonStyle}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"/>
                <ContentPresenter x:Name="PART_Header" 
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
              </Grid>
            </Border>
            <ItemsPresenter x:Name="ItemsHost"/>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false"/>
                <Condition Property="Width" Value="Auto"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false"/>
                <Condition Property="Height" Value="Auto"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinHeight" Value="21"/>
            </MultiTrigger>
            <Trigger Property="IsAltState" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource AltListItem}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="Bd" Value="true">
              <Setter Property="Background" TargetName="Bd" Value="{StaticResource MouseOverListItem}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsAltState" Value="true"/>
                <Condition Property="core:MultiSelectTreeView.IsItemSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Bd" Value="{StaticResource AltSelectedListItem}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsAltState" Value="false"/>
                <Condition Property="core:MultiSelectTreeView.IsItemSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedListItem}"/>
              <Setter Property="Foreground" Value="{StaticResource SelectedListItemForeground}"/>
              <Setter Property="Style" TargetName="Expander" Value="{DynamicResource TreeViewSelectedToggleButtonStyle}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource TreeViewDisabledForeground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--#endregion-->

</ResourceDictionary>