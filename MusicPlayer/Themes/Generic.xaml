<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Musegician"
                    xmlns:core="clr-namespace:Musegician.Core"
                    xmlns:equalizer="clr-namespace:Musegician.Equalizer"
                    xmlns:darkBlendTheme="clr-namespace:DarkBlendTheme">


  <!--#region Colors-->
  <Color x:Key="WindowBackgroundColor">#444444</Color>
  <Color x:Key="DarkBackgroundColor">#333333</Color>
  <Color x:Key="VeryDarkBackgroundColor">#222222</Color>
  <Color x:Key="LightBackgroundColor">#595959</Color>
  <Color x:Key="BackgroundColor">#3D3D3D</Color>
  <Color x:Key="DisabledBackgroundColor">#424242</Color>
  <Color x:Key="LightDisabledBackgroundColor">#666666</Color>

  <Color x:Key="ForegroundColor">#EFEFEF</Color>

  <Color x:Key="HighlightColor">#BDBDBD</Color>
  <Color x:Key="HotColor">#525252</Color>
  
  <Color x:Key="ControlLightColor">White</Color>
  <Color x:Key="ControlMediumColor">#FF7381F9</Color>
  <Color x:Key="ControlDarkColor">#FF211AA9</Color>

  <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
  <Color x:Key="ControlPressedColor">#FF211AA9</Color>
  
  <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
  <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
  <Color x:Key="DisabledForegroundColor">#FF888888</Color>
  
  <Color x:Key="GlyphColor">#FF444444</Color>
  <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

  <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
  <Color x:Key="BorderMediumColor">#FF888888</Color>
  <Color x:Key="BorderDarkColor">#FF444444</Color>

  <Color x:Key="PressedBorderLightColor">#FF888888</Color>
  <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

  <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
  <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

  <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

  <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
  <!--#endregion-->


  <!--#region Brushes-->
  <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}"/>
  <SolidColorBrush x:Key="MouseOverForegroundBrush" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}"/>
  <SolidColorBrush x:Key="DarkInsetPanel" Color="{StaticResource VeryDarkBackgroundColor}"/>

  <SolidColorBrush x:Key="ListBorder" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="ListBackground" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="SelectedListItem" Color="{StaticResource HighlightColor}"/>
  <SolidColorBrush x:Key="AltListItem" Color="DarkBlue"/>
  <SolidColorBrush x:Key="AltSelectedListItem" Color="DarkSlateBlue"/>
  <SolidColorBrush x:Key="SelectedListItemForeground" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="MouseOverListItem" Color="#4A4A4A"/>

  <SolidColorBrush x:Key="TreeViewBackground" Color="{StaticResource DarkBackgroundColor}"/>
  <SolidColorBrush x:Key="TreeViewDisabledForeground" Color="{StaticResource LightDisabledBackgroundColor}"/>


  <GradientStopCollection x:Key="MeterGradStops">
    <GradientStop Color="Green" Offset="0.0"/>
    <GradientStop Color="Green" Offset="0.7"/>
    <GradientStop Color="Yellow" Offset="0.95"/>
    <GradientStop Color="Red" Offset="1.0"/>
  </GradientStopCollection>

  <!--#endregion-->

  <equalizer:FloatVPointConverter x:Key="FloatVPointConverter"/>
  <equalizer:FloatHPointConverter x:Key="FloatHPointConverter"/>

  <!--#region MultiSelectTreeView-->
  <Style TargetType="{x:Type core:MultiSelectTreeView}">
    <Setter Property="Background" Value="{StaticResource TreeViewBackground}"/>
    <Setter Property="Padding" Value="1"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type core:MultiSelectTreeView}">
          <Border x:Name="Bd" SnapsToDevicePixels="true">
            <ScrollViewer x:Name="_tv_scrollviewer_" 
                          Background="{TemplateBinding Background}"
                          CanContentScroll="false" Focusable="false" 
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                          Padding="{TemplateBinding Padding}" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource TreeViewDisabledForeground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DrawingBrush x:Key="SelectedBorderBrush"
                Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{StaticResource SelectedListItem}">
          <GeometryDrawing.Geometry>
            <GeometryGroup>
              <RectangleGeometry Rect="0,0,50,50" />
              <RectangleGeometry Rect="50,50,50,50" />
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <DrawingBrush x:Key="UnSelectedBorderBrush"/>


  <Style TargetType="{x:Type core:MultiSelectTreeViewItem}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="MinHeight" Value="21"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Padding" Value="2,4,2,3"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type core:MultiSelectTreeViewItem}">
          <ControlTemplate.Resources>
            <darkBlendTheme:LeftMarginMultiplierConverter Length="15" x:Key="LengthConverter" />
          </ControlTemplate.Resources>
          <StackPanel>
            <Border Name="Bd"
                    Background="Transparent"
                    Padding="{TemplateBinding Padding}"
                    BorderThickness="1,1,1,1"
                    BorderBrush="{StaticResource UnSelectedBorderBrush}">
              <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="15"/>
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="Expander" 
                              Grid.Column="0"
                              Style="{DynamicResource TreeViewToggleButtonStyle}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"/>
                <ContentPresenter x:Name="PART_Header" 
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
              </Grid>
            </Border>
            <ItemsPresenter x:Name="ItemsHost"/>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false"/>
                <Condition Property="Width" Value="Auto"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false"/>
                <Condition Property="Height" Value="Auto"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinHeight" Value="21"/>
            </MultiTrigger>
            <Trigger Property="IsAltState" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource AltListItem}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="Bd" Value="true">
              <Setter Property="Background" TargetName="Bd" Value="{StaticResource MouseOverListItem}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsAltState" Value="true"/>
                <Condition Property="core:MultiSelectTreeView.IsItemSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Bd" Value="{StaticResource AltSelectedListItem}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsAltState" Value="false"/>
                <Condition Property="core:MultiSelectTreeView.IsItemSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedListItem}"/>
              <Setter Property="Foreground" Value="{StaticResource SelectedListItemForeground}"/>
              <Setter Property="Style" TargetName="Expander" Value="{DynamicResource TreeViewSelectedToggleButtonStyle}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource TreeViewDisabledForeground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--TwoValueVisualizerSlider-->

  <Style x:Key="TwoValueVisualizerSliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels"
          Value="true" />
    <Setter Property="OverridesDefaultStyle"
          Value="true" />
    <Setter Property="IsTabStop"
          Value="false" />
    <Setter Property="Focusable"
          Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TwoValueVisualizerSliderThumbStyle"
       TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels"
          Value="true" />
    <Setter Property="OverridesDefaultStyle"
          Value="true" />
    <Setter Property="Height"
          Value="14" />
    <Setter Property="Width"
          Value="14" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Ellipse x:Name="Ellipse"
                 StrokeThickness="1">
            <Ellipse.Stroke>
              <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{StaticResource BorderLightColor}"
                                Offset="0.0" />
                    <GradientStop Color="{StaticResource BorderDarkColor}"
                                Offset="1.0" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Ellipse.Stroke>
            <Ellipse.Fill>
              <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                <GradientStop Color="{StaticResource ControlMediumColor}"
                            Offset="1" />
                <GradientStop Color="{StaticResource ControlLightColor}" />
              </LinearGradientBrush>
            </Ellipse.Fill>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                      <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                      <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                      <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Ellipse>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Template when the orientation of the Slider is Horizontal.-->
  <ControlTemplate x:Key="HorizontalTwoValueVisualizerSlider"
                 TargetType="{x:Type core:TwoValueVisualizerSlider}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto"
                       MinHeight="{TemplateBinding MinHeight}"/>
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <TickBar x:Name="TopTick"
               SnapsToDevicePixels="True"
               Placement="Top"
               Height="4"
               Grid.Row="0"
               Visibility="Collapsed">
        <TickBar.Fill>
          <SolidColorBrush Color="{StaticResource GlyphColor}" />
        </TickBar.Fill>
      </TickBar>
      <Border x:Name="TrackBackground"
              Margin="0"
              CornerRadius="2"
              Height="4"
              Grid.Row="1"
              BorderThickness="1">
        <Border.BorderBrush>
          <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStopCollection>
                <GradientStop Color="{StaticResource BorderLightColor}"
                              Offset="0.0" />
                <GradientStop Color="{StaticResource BorderDarkColor}"
                              Offset="1.0" />
              </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Border.BorderBrush>
        <Border.Background>
          <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStopCollection>
                <GradientStop Color="{StaticResource ControlLightColor}"
                              Offset="0.0" />
                <GradientStop Color="{StaticResource SliderTrackDarkColor}"
                              Offset="1.0" />
              </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Border.Background>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <ProgressBar Orientation="Horizontal" Grid.Row="0" Background="Transparent"
                       Value="{TemplateBinding LeftValue}" Maximum="1">
            <ProgressBar.Foreground>
              <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="{TemplateBinding LeftValue, Converter={StaticResource FloatHPointConverter}}"
                                   GradientStops="{StaticResource MeterGradStops}"/>
            </ProgressBar.Foreground>
          </ProgressBar>
          <ProgressBar Orientation="Horizontal" Grid.Row="2" Background="Transparent"
                       Value="{TemplateBinding RightValue}" Maximum="1">
            <ProgressBar.Foreground>
              <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="{TemplateBinding RightValue, Converter={StaticResource FloatHPointConverter}}"
                                   GradientStops="{StaticResource MeterGradStops}"/>
            </ProgressBar.Foreground>
          </ProgressBar>
        </Grid>
      </Border>
      <Track Grid.Row="1"
             x:Name="PART_Track">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource TwoValueVisualizerSliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <!--<Thumb Style="{StaticResource TwoValueVisualizerSliderThumbStyle}" />-->
          <Thumb/>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource TwoValueVisualizerSliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
        </Track.IncreaseRepeatButton>
      </Track>
      <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement"
             Value="TopLeft">
        <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement"
             Value="BottomRight">
        <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement"
             Value="Both">
        <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
        <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--Template when the orientation of the Slider is Vertical.-->
  <ControlTemplate x:Key="VerticalTwoValueVisualizerSlider"
                 TargetType="{x:Type core:TwoValueVisualizerSlider}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" MinWidth="{TemplateBinding MinWidth}" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Left" Width="4"
               Visibility="Collapsed" Margin="0,0,2,0">
        <TickBar.Fill>
          <SolidColorBrush Color="{StaticResource GlyphColor}" />
        </TickBar.Fill>
      </TickBar>

      <!--<Border x:Name="TrackBackground"
              Margin="0" CornerRadius="0" Width="4" Grid.Column="1" BorderThickness="1">
        <Border.BorderBrush>
          <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
              <GradientStopCollection>
                <GradientStop Color="{StaticResource BorderLightColor}" Offset="0.0" />
                <GradientStop Color="{StaticResource BorderDarkColor}" Offset="1.0" />
              </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Border.BorderBrush>
        <Border.Background>
          <LinearGradientBrush EndPoint="1,0" StartPoint="0.25,0">
            <GradientStop Color="{StaticResource ControlLightColor}" Offset="0" />
            <GradientStop Color="{StaticResource SliderTrackDarkColor}" Offset="1" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>-->

      <Grid Grid.Column="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="2"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ProgressBar x:Name="LeftValueBar" Orientation="Vertical" Grid.Column="0" Grid.ColumnSpan="2"
                     Value="{Binding LeftValue, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                     Minimum="0" Maximum="1">
          <ProgressBar.Foreground>
            <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="{Binding Path=Value, ElementName=LeftValueBar, Converter={StaticResource FloatVPointConverter}}"
                                   GradientStops="{StaticResource MeterGradStops}"/>
          </ProgressBar.Foreground>
        </ProgressBar>
        <ProgressBar x:Name="RightValueBar" Orientation="Vertical" Grid.Column="3" Grid.ColumnSpan="2"
                     Value="{Binding RightValue, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                     Minimum="0" Maximum="1">
          <ProgressBar.Foreground>
            <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="{Binding Path=Value, ElementName=RightValueBar, Converter={StaticResource FloatVPointConverter}}"
                                   GradientStops="{StaticResource MeterGradStops}"/>
          </ProgressBar.Foreground>
        </ProgressBar>
      </Grid>

      <Track Grid.Column="1" x:Name="PART_Track">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource TwoValueVisualizerSliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <!--<Thumb Style="{StaticResource TwoValueVisualizerSliderThumbStyle}" />-->
          <Thumb/>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource TwoValueVisualizerSliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
        </Track.IncreaseRepeatButton>
      </Track>
      <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Column="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Right"
             Width="4"
             Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement"
             Value="TopLeft">
        <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement"
             Value="BottomRight">
        <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement"
             Value="Both">
        <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
        <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type core:TwoValueVisualizerSlider}">
    <Setter Property="SnapsToDevicePixels"
          Value="true" />
    <Style.Triggers>
      <Trigger Property="Orientation"
             Value="Horizontal">
        <Setter Property="MinWidth"
              Value="104" />
        <Setter Property="MinHeight"
              Value="21" />
        <Setter Property="Template"
              Value="{StaticResource HorizontalTwoValueVisualizerSlider}" />
      </Trigger>
      <Trigger Property="Orientation"
             Value="Vertical">
        <Setter Property="Template"
              Value="{StaticResource VerticalTwoValueVisualizerSlider}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--#endregion-->

</ResourceDictionary>